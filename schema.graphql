type Transfer @entity {
  id: ID!
  from: Account! # address
  to: Account! # address
  value: BigDecimal!
  underlyingAmount: BigDecimal!
  at: Checkpoint!
}

type Approval @entity {
  id: ID!
  owner: Account! # address
  spender: Account! # address
  value: BigDecimal!
  at: Checkpoint!
}

type Mint @entity {
  id: ID!
  minter: Account! # address
  dai: BigDecimal!
  dDai: BigDecimal!
  at: Checkpoint!
}

type Redeem @entity {
  id: ID!
  redeemer: Account! # address
  dai: BigDecimal!
  dDai: BigDecimal!
  at: Checkpoint!
}

type Accrue @entity {
  id: ID!
  dDaiExchangeRate: BigDecimal!
  cDaiExchangeRate: BigDecimal!
  at: Checkpoint!
}

type CollectSurplus @entity {
  id: ID!
  dai: BigDecimal! # uint256
  cDai: BigDecimal! # uint256
  at: Checkpoint!
}

type Checkpoint @entity {
  id: ID! # block number
  version: Int!
  totalSupply: BigDecimal!
  totalSupplyUnderlying: BigDecimal!
  exchangeRate: BigDecimal!
  supplyRatePerBlock: BigDecimal!
  cumulativeMintedDai: BigDecimal!
  cumulativeRedeemedDai: BigDecimal!
  cumulativeInterestEarned: BigDecimal!
  lastAccrual: Int!
  spreadPerBlock: BigDecimal!
  currentCDaiSurplus: BigDecimal!
  currentDaiSurplus: BigDecimal!
  cumulativeCDaiSurplusPulled: BigDecimal!
  cumulativeDaiSurplusPulled: BigDecimal!
  cumulativeTransferredDai: BigDecimal!
  mints: Int!
  redeems: Int!
  transfers: Int!
  holders: Int!
  blockNumber: Int!
  blockTime: Int!
}

type Account @entity {
  id: ID! # address
  balance: BigDecimal! #
  balanceUnderlying: BigDecimal!
  totalInterestEarned: BigDecimal!
  totalDaiTransferredIn: BigDecimal!
  totalDaiTransferredOut: BigDecimal!
  totalMintedDai: BigDecimal!
  totalRedeemedDai: BigDecimal!
  numberOfMints: Int!
  numberOfRedeems: Int!
  numberOfTransfersIn: Int!
  numberOfTransfersOut: Int!
  transfersIn: [Transfer!]! @derivedFrom(field: "to")
  transfersOut: [Transfer!]! @derivedFrom(field: "from")
  mintEvents: [Mint!]! @derivedFrom(field: "minter")
  redeemEvents: [Redeem!]! @derivedFrom(field: "redeemer")
  allowances: [Allowance!]! @derivedFrom(field: "spender")
  approvals: [Allowance!]! @derivedFrom(field: "owner")
  approvalEventsAsSpender: [Approval!]! @derivedFrom(field: "spender")
  approvalEventsAsOwner: [Approval!]! @derivedFrom(field: "owner")
  lastAction: Checkpoint!
}

type Allowance @entity {
  id: ID!
  owner: Account! # address
  spender: Account! # address
  value: BigDecimal!
}